/* Programa cena de los filósofos. Sin interbloqueo */
#define N 5 //N = numero de comensales, palillos, filósofos, etc…
semáforo palillo[N]={1}; //arreglo de N semáforos que representan los palillos. Todos en 1
void filosofo (int i) //proceso de cada filosofo
{
while (true) //bucle infinito, se puede colocar condición de parada con variable
{
pensar ( ); //tiempo de espera aleatorio de c/filosofo antes de ‘comer’
wait (palillo [i], palillo[i +1] mod 5); //pido los 2 palillos simultáneamente
comer ( ); //tiempo de espera mientras come (puede ser aleatorio)
signal (palillo [i]); //libero palillo izquierdo
signal (palillo [(i + 1) mod 5]); //libero palillo derecho
/* El orden en que libero los palillos no es de especial relevancia. */
}
}
void main()
{
parbegin (filosofo (0), filosofo (1), filosofo (2), filosofo (3), …, filosofo (N));
//inicio de los procesos (filósofos)
} 
